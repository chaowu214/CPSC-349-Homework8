{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chaowu/Desktop/CS349/tictactoe/src/App.js\";\nimport './App.css';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: 6,\n      columns: 7,\n      moves: [],\n      playerTurn: 'red'\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        moves: [],\n        winner: null\n      });\n    };\n\n    this.getPiece = (x, y) => {\n      const list = this.state.moves.filter(item => {\n        return item.x === x && item.y === y;\n      });\n      return list[0];\n    };\n\n    this.isWinner = (x, y) => {\n      const {\n        winner,\n        winningMoves\n      } = this.state;\n\n      if (!winner) {\n        return false;\n      }\n\n      return winningMoves.some(item => item.x === x && item.y === y);\n    };\n\n    this.checkWinner = (x, y, player) => {\n      //check vertically\n      let winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let column = x + 1; column < x + 4; column += 1) {\n        const checkPiece = this.getPiece(column, y);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let column = x - 1; column > x - 4; column -= 1) {\n        const checkPiece = this.getPiece(column, y);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check horizontally\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let row = y + 1; row < y + 4; row += 1) {\n        const checkPiece = this.getPiece(x, row);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let row = y - 1; row > y - 4; row -= 1) {\n        const checkPiece = this.getPiece(x, row);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check diagnalleft\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y + i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y - i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check diagnalright\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y + i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y - i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n    };\n\n    this.addMove = (x, y) => {\n      const {\n        playerTurn\n      } = this.state;\n      const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red';\n      let availablePosition = null;\n\n      for (let position = this.state.rows - 1; position >= 0; position--) {\n        if (!this.getPiece(x, position)) {\n          availablePosition = position;\n          break;\n        }\n      }\n\n      if (availablePosition != null) {\n        this.setState({\n          moves: this.state.moves.concat({\n            x,\n            y: availablePosition,\n            player: playerTurn\n          }),\n          playerTurn: nextPlayerTurn\n        }, () => this.checkWinner(x, availablePosition, playerTurn));\n      }\n    };\n  }\n\n  renderBoard() {\n    const {\n      rows,\n      columns,\n      winner\n    } = this.state;\n    const rowsDisplay = [];\n\n    for (let row = 0; row < this.state.rows; row += 1) {\n      const columnDisplay = [];\n\n      for (let column = 0; column < this.state.columns; column += 1) {\n        const piece = this.getPiece(column, row);\n        const winner = this.isWinner(column, row);\n        columnDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.addMove(column, row);\n          },\n          style: {\n            width: '8vw',\n            height: '8vw',\n            backgroundColor: winner ? 'pink' : 'yellow',\n            boxShadow: winner ? '0px 0px 10px #fff' : undefined,\n            display: 'flex',\n            padding: 5,\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderRadius: '10%',\n              backgroundColor: 'white',\n              flex: 1,\n              display: 'flex'\n            },\n            children: [\" \", piece ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: piece.player,\n                flex: 1,\n                borderRadius: '50%',\n                border: '1px solid #333'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this) : undefined, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 33\n        }, this));\n      }\n\n      rowsDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [\" \", columnDisplay, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 31\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [\" \", winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.resetBoard,\n        style: {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          zIndex: 3,\n          backgroundColor: 'rgba(0,0,0, .5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignContent: 'center',\n          color: '#fff',\n          fontWeight: '200',\n          fontSize: '8vw'\n        },\n        children: [\" \", `${winner.toUpperCase()} WINS!!`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }, this), \" \", rowsDisplay, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 20\n    }, this);\n  }\n\n  render() {\n    const {\n      style\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style ? Object.assign({}, styles.container, style) : styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.renderBoard(), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetBoard,\n          children: \" Clear Board \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 22\n    }, this);\n  }\n\n}\nconst styles = {\n  container: {\n    height: '100%',\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["/Users/chaowu/Desktop/CS349/tictactoe/src/App.js"],"names":["React","App","Component","state","rows","columns","moves","playerTurn","resetBoard","setState","winner","getPiece","x","y","list","filter","item","isWinner","winningMoves","some","checkWinner","player","column","checkPiece","push","length","console","log","row","i","addMove","nextPlayerTurn","availablePosition","position","concat","renderBoard","rowsDisplay","columnDisplay","piece","width","height","backgroundColor","boxShadow","undefined","display","padding","cursor","borderRadius","flex","border","flexDirection","left","right","bottom","top","zIndex","justifyContent","alignContent","color","fontWeight","fontSize","toUpperCase","render","style","props","Object","assign","styles","container","alignItems"],"mappings":"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","sourcesContent":["import './App.css'\nimport React from 'react';\n\nexport default class App extends React.Component {\n    state = {\n      rows: 6,\n      columns: 7,\n      moves: [],\n      playerTurn: 'red',\n    };\n\n    resetBoard = () => {\n      this.setState({\n        moves: [],\n        winner: null\n      });\n\n    }\n\n    getPiece = (x, y) => {\n      const list = this.state.moves.filter((item) => {\n        return (item.x === x && item.y === y);\n      });\n      return list[0];\n    }\n\n    isWinner = (x, y) => {\n      const {\n        winner,\n        winningMoves\n      } = this.state;\n      if (!winner) {\n        return false;\n      }\n      return winningMoves.some(item => (item.x === x && item.y === y));\n    }\n\n    checkWinner = (x, y, player) => {\n      //check vertically\n      let winningMoves = [{\n        x,\n        y\n      }];\n      for (let column = x + 1; column < x + 4; column += 1) {\n        const checkPiece = this.getPiece(column, y);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n      for (let column = x - 1; column > x - 4; column -= 1) {\n        const checkPiece = this.getPiece(column, y);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves)\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n\n      //check horizontally\n      winningMoves = [{\n        x,\n        y\n      }];\n      for (let row = y + 1; row < y + 4; row += 1) {\n        const checkPiece = this.getPiece(x, row);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let row = y - 1; row > y - 4; row -= 1) {\n        const checkPiece = this.getPiece(x, row);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves)\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n\n      //check diagnalleft\n      winningMoves = [{\n        x,\n        y\n      }];\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y + i);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y - i);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves)\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n\n      //check diagnalright\n      winningMoves = [{\n        x,\n        y\n      }];\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y + i);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y - i);\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves)\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n    }\n\n    addMove = (x, y) => {\n      const {\n        playerTurn\n      } = this.state;\n      const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red';\n      let availablePosition = null;\n      for (let position = this.state.rows - 1; position >= 0; position--) {\n        if (!this.getPiece(x, position)) {\n          availablePosition = position;\n          break;\n        }\n      }\n\n      if (availablePosition != null) {\n        this.setState({\n          moves: this.state.moves.concat({\n            x,\n            y: availablePosition,\n            player: playerTurn\n          }),\n          playerTurn: nextPlayerTurn\n        }, () => this.checkWinner(x, availablePosition, playerTurn));\n      }\n    }\n\n\n    renderBoard() {\n        const {\n          rows,\n          columns,\n          winner\n        } = this.state;\n        const rowsDisplay = [];\n\n        for (let row = 0; row < this.state.rows; row += 1) {\n          const columnDisplay = [];\n          for (let column = 0; column < this.state.columns; column += 1) {\n            const piece = this.getPiece(column, row);\n            const winner = this.isWinner(column, row);\n            columnDisplay.push( <\n              div onClick = {\n                () => {\n                  this.addMove(column, row)\n                }\n              }\n              style = {\n                {\n                  width: '8vw',\n                  height: '8vw',\n                  backgroundColor: winner ? 'pink' : 'yellow',\n                  boxShadow: winner ? '0px 0px 10px #fff' : undefined,\n                  display: 'flex',\n                  padding: 5,\n                  cursor: 'pointer'\n                }\n              } >\n              <\n              div style = {\n                {\n                  borderRadius: '10%',\n                  backgroundColor: 'white',\n                  flex: 1,\n                  display: 'flex'\n                }\n              } > {\n                piece ? < div style = {\n                  {\n                    backgroundColor: piece.player,\n                    flex: 1,\n                    borderRadius: '50%',\n                    border: '1px solid #333'\n                  }\n                }\n                />:undefined} <\n                /div> <\n                /div>\n              );\n            }\n            rowsDisplay.push( <\n              div style = {\n                {\n                  display: 'flex',\n                  flexDirection: 'row'\n                }\n              } > {\n                columnDisplay\n              } < /div>\n            );\n          }\n\n          return ( <\n            div style = {\n              {\n                backgroundColor: 'white',\n                display: 'flex',\n                flexDirection: 'column'\n              }\n            } > {\n              winner && < div onClick = {\n                this.resetBoard\n              }\n              style = {\n                {\n                  position: 'absolute',\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  top: 0,\n                  zIndex: 3,\n                  backgroundColor: 'rgba(0,0,0, .5)',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignContent: 'center',\n                  color: '#fff',\n                  fontWeight: '200',\n                  fontSize: '8vw'\n                }\n              } > {\n                `${winner.toUpperCase()} WINS!!`\n              } < /div>} {\n                rowsDisplay\n              } <\n              /div>\n            );\n          }\n\n\n          render() {\n            const {\n              style\n            } = this.props;\n\n            return ( <\n              div style = {\n                style ? Object.assign({}, styles.container, style) : styles.container\n              } >\n              <\n              div > {\n                this.renderBoard()\n              } <\n              button onClick = {\n                this.resetBoard\n              } > Clear Board < /button> <\n              /div> <\n              /div>\n            );\n          }\n        }\n\n        const styles = {\n          container: {\n            height: '100%',\n            padding: 5,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }"]},"metadata":{},"sourceType":"module"}