{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ReactDOM from'react-dom';import App from'./App';import'./index.css';ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById('root'));// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//           {this.renderSquare(6)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//           {this.renderSquare(9)}\n//           {this.renderSquare(10)}\n//           {this.renderSquare(11)}\n//           {this.renderSquare(12)}\n//           {this.renderSquare(13)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(14)}\n//           {this.renderSquare(15)}\n//           {this.renderSquare(16)}\n//           {this.renderSquare(17)}\n//           {this.renderSquare(18)}\n//           {this.renderSquare(19)}\n//           {this.renderSquare(20)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(21)}\n//           {this.renderSquare(22)}\n//           {this.renderSquare(23)}\n//           {this.renderSquare(24)}\n//           {this.renderSquare(25)}\n//           {this.renderSquare(26)}\n//           {this.renderSquare(27)}\n//         </div>\n//          <div className=\"board-row\">\n//           {this.renderSquare(28)}\n//           {this.renderSquare(29)}\n//           {this.renderSquare(30)}\n//           {this.renderSquare(31)}\n//           {this.renderSquare(32)}\n//           {this.renderSquare(33)}\n//           {this.renderSquare(34)}\n//         </div>\n//          <div className=\"board-row\">\n//           {this.renderSquare(35)}\n//           {this.renderSquare(36)}\n//           {this.renderSquare(37)}\n//           {this.renderSquare(38)}\n//           {this.renderSquare(39)}\n//           {this.renderSquare(40)}\n//           {this.renderSquare(41)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [\n//         {\n//           squares: Array(42).fill(null)\n//         }\n//       ],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n//     this.setState({\n//       history: history.concat([\n//         {\n//           squares: squares\n//         }\n//       ]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext\n//     });\n//   }\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0\n//     });\n//   }\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n//     let status;\n//     if (winner) {\n//       status = \"Winner: \" + winner;\n//     } else {\n//       status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n//     }\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board\n//             squares={current.squares}\n//             onClick={i => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// // ========================================\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3],\n//     [4, 5, 6, 7],\n//     [8, 9, 10, 11],\n//     [12, 13, 14, 15],\n//     [0, 4, 8, 12],\n//     [1, 5, 9, 13],\n//     [2, 6, 10, 14],\n//     [3, 7, 11, 15],\n//     [0, 5, 10, 15],\n//     [3, 6, 9, 12],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }","map":{"version":3,"sources":["/Users/chaowu/Desktop/CS349/tictactoe/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,aAAP,CAEAD,QAAQ,CAACE,MAAT,cACE,KAAC,GAAD,IADF,CAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxsourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//           {this.renderSquare(6)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//           {this.renderSquare(9)}\n//           {this.renderSquare(10)}\n//           {this.renderSquare(11)}\n//           {this.renderSquare(12)}\n//           {this.renderSquare(13)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(14)}\n//           {this.renderSquare(15)}\n//           {this.renderSquare(16)}\n//           {this.renderSquare(17)}\n//           {this.renderSquare(18)}\n//           {this.renderSquare(19)}\n//           {this.renderSquare(20)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(21)}\n//           {this.renderSquare(22)}\n//           {this.renderSquare(23)}\n//           {this.renderSquare(24)}\n//           {this.renderSquare(25)}\n//           {this.renderSquare(26)}\n//           {this.renderSquare(27)}\n//         </div>\n//          <div className=\"board-row\">\n//           {this.renderSquare(28)}\n//           {this.renderSquare(29)}\n//           {this.renderSquare(30)}\n//           {this.renderSquare(31)}\n//           {this.renderSquare(32)}\n//           {this.renderSquare(33)}\n//           {this.renderSquare(34)}\n//         </div>\n//          <div className=\"board-row\">\n//           {this.renderSquare(35)}\n//           {this.renderSquare(36)}\n//           {this.renderSquare(37)}\n//           {this.renderSquare(38)}\n//           {this.renderSquare(39)}\n//           {this.renderSquare(40)}\n//           {this.renderSquare(41)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [\n//         {\n//           squares: Array(42).fill(null)\n//         }\n//       ],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n//     this.setState({\n//       history: history.concat([\n//         {\n//           squares: squares\n//         }\n//       ]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext\n//     });\n//   }\n\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0\n//     });\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n\n//     let status;\n//     if (winner) {\n//       status = \"Winner: \" + winner;\n//     } else {\n//       status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n//     }\n\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board\n//             squares={current.squares}\n//             onClick={i => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// // ========================================\n\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3],\n//     [4, 5, 6, 7],\n//     [8, 9, 10, 11],\n//     [12, 13, 14, 15],\n    \n//     [0, 4, 8, 12],\n//     [1, 5, 9, 13],\n//     [2, 6, 10, 14],\n//     [3, 7, 11, 15],\n    \n//     [0, 5, 10, 15],\n//     [3, 6, 9, 12],\n   \n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n"]},"metadata":{},"sourceType":"module"}