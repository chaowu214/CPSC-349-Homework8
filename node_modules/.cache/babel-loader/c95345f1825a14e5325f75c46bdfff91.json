{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chaowu/Desktop/CS349/tictactoe/src/App.js\";\nimport './App.css';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: 6,\n      columns: 7,\n      moves: [],\n      playerTurn: 'red'\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        moves: [],\n        winner: null\n      });\n    };\n\n    this.getPiece = (x, y) => {\n      const list = this.state.moves.filter(item => {\n        return item.x === x && item.y === y;\n      });\n      return list[0];\n    };\n\n    this.isWinner = (x, y) => {\n      const {\n        winner,\n        winningMoves\n      } = this.state;\n\n      if (!winner) {\n        return false;\n      }\n\n      return winningMoves.some(item => item.x === x && item.y === y);\n    };\n\n    this.checkWinner = (x, y, player) => {\n      //check vertically\n      let winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let column = x + 1; column < x + 4; column += 1) {\n        const checkPiece = this.getPiece(column, y);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let column = x - 1; column > x - 4; column -= 1) {\n        const checkPiece = this.getPiece(column, y);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: column,\n            y: y\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check horizontally\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let row = y + 1; row < y + 4; row += 1) {\n        const checkPiece = this.getPiece(x, row);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let row = y - 1; row > y - 4; row -= 1) {\n        const checkPiece = this.getPiece(x, row);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x,\n            y: row\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check diagnalleft\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y + i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y - i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      } //check diagnalright\n\n\n      winningMoves = [{\n        x,\n        y\n      }];\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x - i, y + i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x - i,\n            y: y + i\n          });\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i += 1) {\n        const checkPiece = this.getPiece(x + i, y - i);\n\n        if (checkPiece && checkPiece.player === player) {\n          winningMoves.push({\n            x: x + i,\n            y: y - i\n          });\n        } else {\n          break;\n        }\n      }\n\n      if (winningMoves.length > 3) {\n        console.log('winner', winningMoves);\n        this.setState({\n          winner: player,\n          winningMoves\n        });\n        return true;\n      }\n    };\n\n    this.addMove = (x, y) => {\n      const {\n        playerTurn\n      } = this.state;\n      const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red'; //check for winner, based on the next move\n\n      this.setState({\n        moves: this.state.moves.concat({\n          x,\n          y,\n          player: playerTurn\n        }),\n        playerTurn: nextPlayerTurn\n      }, () => this.checkWinner(x, y, playerTurn));\n    };\n  }\n\n  renderBoard() {\n    const {\n      rows,\n      columns,\n      winner\n    } = this.state;\n    const rowsDisplay = [];\n\n    for (let row = 0; row < this.state.rows; row += 1) {\n      const columnDisplay = [];\n\n      for (let column = 0; column < this.state.columns; column += 1) {\n        const piece = this.getPiece(column, row);\n        const winner = this.isWinner(column, row);\n        columnDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.addMove(column, row);\n          },\n          style: {\n            width: '8vw',\n            height: '8vw',\n            backgroundColor: winner ? '#fff' : 'yellow',\n            boxShadow: winner ? '0px 0px 10px #fff' : undefined,\n            display: 'flex',\n            padding: 5,\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderRadius: '10%',\n              backgroundColor: 'white',\n              flex: 1,\n              display: 'flex'\n            },\n            children: piece ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: piece.player,\n                flex: 1,\n                borderRadius: '50%',\n                border: '1px solid #333'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this) : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this));\n      }\n\n      rowsDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: columnDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.resetBoard,\n        style: {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          zIndex: 3,\n          backgroundColor: 'rgba(0,0,0, .5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignContent: 'center',\n          color: '#fff',\n          fontWeight: '200',\n          fontSize: '8vw'\n        },\n        children: `${winner} WINS!!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 20\n      }, this), rowsDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      style\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style ? Object.assign({}, styles.container, style) : styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.renderBoard(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetBoard,\n          children: \"Clear Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst styles = {\n  container: {\n    height: '100%',\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["/Users/chaowu/Desktop/CS349/tictactoe/src/App.js"],"names":["React","App","Component","state","rows","columns","moves","playerTurn","resetBoard","setState","winner","getPiece","x","y","list","filter","item","isWinner","winningMoves","some","checkWinner","player","column","checkPiece","push","length","console","log","row","i","addMove","nextPlayerTurn","concat","renderBoard","rowsDisplay","columnDisplay","piece","width","height","backgroundColor","boxShadow","undefined","display","padding","cursor","borderRadius","flex","border","flexDirection","position","left","right","bottom","top","zIndex","justifyContent","alignContent","color","fontWeight","fontSize","render","style","props","Object","assign","styles","container","alignItems"],"mappings":"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","sourcesContent":["import './App.css'\nimport React from 'react';\n\nexport default class App extends React.Component{\n  state = {\n    rows:6,\n    columns:7,\n    moves:[],\n    playerTurn:'red',\n  };\n\n  resetBoard = ()=>{\n    this.setState({moves:[], winner:null});\n\n  }\n\n  getPiece = (x,y)=>{\n    const list = this.state.moves.filter((item)=>{\n      return (item.x===x && item.y===y);\n    });\n    return list[0];\n  }\n\n  isWinner = (x,y)=>{\n    const {winner, winningMoves} = this.state;\n    if(!winner){\n      return false;\n    }\n    return winningMoves.some(item=>(item.x===x && item.y===y));\n  }\n\n  checkWinner = (x, y, player)=>{\n    //check vertically\n    let winningMoves=[{x,y}];\n    for(let column = x+1; column<x+4; column+=1){\n      const checkPiece = this.getPiece(column, y);\n      if(checkPiece && checkPiece.player === player){\n        winningMoves.push({x:column, y:y});\n      }else{\n        break;\n      }\n    }\n    for(let column = x-1; column>x-4; column-=1){\n      const checkPiece = this.getPiece(column, y);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:column, y:y});\n      }else{\n        break;\n      }\n    }\n\n    if(winningMoves.length>3){\n      console.log('winner',winningMoves)\n      this.setState({winner:player, winningMoves});\n      return true;\n    }\n\n    //check horizontally\n    winningMoves=[{x,y}];\n    for(let row = y+1; row<y+4; row+=1){\n      const checkPiece = this.getPiece(x, row);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x, y:row});\n      }else{\n        break;\n      }\n    }\n\n    for(let row = y-1; row>y-4; row-=1){\n      const checkPiece = this.getPiece(x,row);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x, y:row});\n      }else{\n        break;\n      }\n    }\n\n    if(winningMoves.length>3){\n      console.log('winner',winningMoves)\n      this.setState({winner:player, winningMoves});\n      return true;\n    }\n\n    //check diagnalleft\n    winningMoves=[{x,y}];\n    for(let i = 1; i<4; i+=1){\n      const checkPiece = this.getPiece(x+i, y+i);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x+i, y:y+i});\n      }else{\n        break;\n      }\n    }\n\n    for(let i = 1; i<4; i+=1){\n      const checkPiece = this.getPiece(x-i,y-i);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x-i, y:y-i});\n      }else{\n        break;\n      }\n    }\n\n    if(winningMoves.length>3){\n      console.log('winner',winningMoves)\n      this.setState({winner:player, winningMoves});\n      return true;\n    }\n\n    //check diagnalright\n    winningMoves=[{x,y}];\n    for(let i = 1; i<4; i+=1){\n      const checkPiece = this.getPiece(x-i, y+i);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x-i, y:y+i});\n      }else{\n        break;\n      }\n    }\n\n    for(let i = 1; i<4; i+=1){\n      const checkPiece = this.getPiece(x+i,y-i);\n      if(checkPiece && checkPiece.player ===player){\n        winningMoves.push({x:x+i, y:y-i});\n      }else{\n        break;\n      }\n    }\n\n    if(winningMoves.length>3){\n      console.log('winner',winningMoves)\n      this.setState({winner:player, winningMoves});\n      return true;\n    }\n  }\n\n  addMove = (x,y)=>{\n    const{playerTurn}= this.state;\n    const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red';\n    //check for winner, based on the next move\n    this.setState({moves:this.state.moves.concat({x, y, player:playerTurn}), playerTurn:nextPlayerTurn},()=> this.checkWinner(x,y, playerTurn));\n  }\n\n\n  renderBoard(){\n    const {rows, columns, winner}= this.state;\n    const rowsDisplay = [];\n\n    for(let row=0; row<this.state.rows; row+=1){\n      const columnDisplay = [];\n      for(let column=0; column<this.state.columns; column+=1){\n        const piece = this.getPiece(column,row);\n        const winner= this.isWinner(column, row);\n        columnDisplay.push(\n          <div onClick={()=>{this.addMove(column, row)}} style={{width:'8vw', height:'8vw', backgroundColor: winner? '#fff':'yellow', boxShadow: winner?'0px 0px 10px #fff':undefined, \n          display:'flex', padding: 5, cursor:'pointer'}}>\n            <div style={{borderRadius:'10%', backgroundColor:'white', flex:1, display:'flex'}}>\n              {piece? <div style={{backgroundColor: piece.player, flex:1, borderRadius:'50%', border:'1px solid #333'}}/>:undefined}\n            </div>\n          </div>\n        );\n      }\n      rowsDisplay.push(\n      <div style={{display:'flex', flexDirection:'row'}}>{columnDisplay}</div>\n      );\n    }\n\n    return(\n      <div style={{backgroundColor: 'white', display:'flex', flexDirection:'column'}}>\n        {winner && <div onClick={this.resetBoard} style={{position:'absolute',left:0,right:0,bottom:0,top:0, zIndex:3, backgroundColor:'rgba(0,0,0, .5)',\n      display:'flex', justifyContent:'center', alignContent:'center', color:'#fff', fontWeight:'200', fontSize:'8vw' }}>{`${winner} WINS!!`}</div>}\n        {rowsDisplay}\n      </div>\n    );\n  }\n\n\n  render(){\n    const {style} = this.props;\n\n    return (\n      <div style={style ? Object.assign({}, styles.container, style):styles.container}>\n        <div>\n          {this.renderBoard()}\n          <button onClick={this.resetBoard}>Clear Board</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container:{\n    height:'100%',\n    padding:5,\n    display:'flex',\n    justifyContent:'center',\n    alignItems:'center'\n  }\n}"]},"metadata":{},"sourceType":"module"}