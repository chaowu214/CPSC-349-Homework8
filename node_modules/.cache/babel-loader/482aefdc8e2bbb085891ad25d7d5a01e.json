{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chaowu/Desktop/CS349/tictactoe/src/App.js\";\nimport './App.css';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: 6,\n      columns: 7,\n      moves: [// {x:0, y:0, player:'red'}\n      ],\n      playerTurn: 'red'\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        moves: []\n      });\n    };\n\n    this.getPiece = (x, y) => {\n      const list = this.state.moves.filter(item => {\n        return item.x === x && item.y === y;\n      });\n      return list[0];\n    };\n\n    this.addMove = (x, y) => {\n      const {\n        playerTurn\n      } = this.state;\n      const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red';\n      this.setState({\n        moves: this.state.moves.concat({\n          x,\n          y,\n          player: playerTurn\n        }),\n        playerTurn: nextPlayerTurn\n      });\n    };\n  }\n\n  renderBoard() {\n    const {\n      rows,\n      columns\n    } = this.state;\n    const rowsDisplay = [];\n\n    for (let row = 0; row < this.state.rows; row += 1) {\n      const columnDisplay = [];\n\n      for (let column = 0; column < this.state.columns; column += 1) {\n        const piece = this.getPiece(column, row);\n        columnDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            this.addMove(column, row);\n          },\n          style: {\n            width: '8vw',\n            height: '8vw',\n            backgroundColor: 'yellow',\n            display: 'flex',\n            padding: 5,\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderRadius: '50%',\n              backgroundColor: 'white',\n              flex: 1,\n              display: 'flex'\n            },\n            children: piece ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: piece.player,\n                flex: 1,\n                borderRadius: '50%',\n                border: '1px solid #333'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this) : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this));\n      }\n\n      rowsDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: columnDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: rowsDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      style\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style ? Object.assign({}, styles.container, style) : styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderBoard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst styles = {\n  container: {\n    height: '100%',\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["/Users/chaowu/Desktop/CS349/tictactoe/src/App.js"],"names":["React","App","Component","state","rows","columns","moves","playerTurn","resetBoard","setState","getPiece","x","y","list","filter","item","addMove","nextPlayerTurn","concat","player","renderBoard","rowsDisplay","row","columnDisplay","column","piece","push","width","height","backgroundColor","display","padding","cursor","borderRadius","flex","border","undefined","flexDirection","render","style","props","Object","assign","styles","container","justifyContent","alignItems"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AACNC,MAAAA,IAAI,EAAC,CADC;AAENC,MAAAA,OAAO,EAAC,CAFF;AAGNC,MAAAA,KAAK,EAAC,CACJ;AADI,OAHA;AAMNC,MAAAA,UAAU,EAAC;AANL,KADsC;;AAAA,SAU9CC,UAV8C,GAUjC,MAAI;AACf,WAAKC,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC;AAAP,OAAd;AAED,KAb6C;;AAAA,SAe9CI,QAf8C,GAenC,CAACC,CAAD,EAAGC,CAAH,KAAO;AAChB,YAAMC,IAAI,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBQ,MAAjB,CAAyBC,IAAD,IAAQ;AAC3C,eAAQA,IAAI,CAACJ,CAAL,KAASA,CAAT,IAAcI,IAAI,CAACH,CAAL,KAASA,CAA/B;AACD,OAFY,CAAb;AAGA,aAAOC,IAAI,CAAC,CAAD,CAAX;AACD,KApB6C;;AAAA,SAsB9CG,OAtB8C,GAsBpC,CAACL,CAAD,EAAGC,CAAH,KAAO;AACf,YAAK;AAACL,QAAAA;AAAD,UAAc,KAAKJ,KAAxB;AACA,YAAMc,cAAc,GAAGV,UAAU,KAAK,KAAf,GAAuB,MAAvB,GAAgC,KAAvD;AACA,WAAKE,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWG,KAAX,CAAiBY,MAAjB,CAAwB;AAACP,UAAAA,CAAD;AAAIC,UAAAA,CAAJ;AAAOO,UAAAA,MAAM,EAACZ;AAAd,SAAxB,CAAP;AAA2DA,QAAAA,UAAU,EAACU;AAAtE,OAAd;AACD,KA1B6C;AAAA;;AA6B9CG,EAAAA,WAAW,GAAE;AACX,UAAM;AAAChB,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiB,KAAKF,KAA5B;AACA,UAAMkB,WAAW,GAAG,EAApB;;AAEA,SAAI,IAAIC,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAAC,KAAKnB,KAAL,CAAWC,IAA9B,EAAoCkB,GAAG,IAAE,CAAzC,EAA2C;AACzC,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAI,IAAIC,MAAM,GAAC,CAAf,EAAkBA,MAAM,GAAC,KAAKrB,KAAL,CAAWE,OAApC,EAA6CmB,MAAM,IAAE,CAArD,EAAuD;AACrD,cAAMC,KAAK,GAAG,KAAKf,QAAL,CAAcc,MAAd,EAAqBF,GAArB,CAAd;AACAC,QAAAA,aAAa,CAACG,IAAd,eACE;AAAK,UAAA,OAAO,EAAE,MAAI;AAAC,iBAAKV,OAAL,CAAaQ,MAAb,EAAqBF,GAArB;AAA0B,WAA7C;AAA+C,UAAA,KAAK,EAAE;AAACK,YAAAA,KAAK,EAAC,KAAP;AAAcC,YAAAA,MAAM,EAAC,KAArB;AAA4BC,YAAAA,eAAe,EAAC,QAA5C;AAAsDC,YAAAA,OAAO,EAAC,MAA9D;AAAsEC,YAAAA,OAAO,EAAE,CAA/E;AAAkFC,YAAAA,MAAM,EAAC;AAAzF,WAAtD;AAAA,iCACE;AAAK,YAAA,KAAK,EAAE;AAACC,cAAAA,YAAY,EAAC,KAAd;AAAqBJ,cAAAA,eAAe,EAAC,OAArC;AAA8CK,cAAAA,IAAI,EAAC,CAAnD;AAAsDJ,cAAAA,OAAO,EAAC;AAA9D,aAAZ;AAAA,sBACGL,KAAK,gBAAE;AAAK,cAAA,KAAK,EAAE;AAACI,gBAAAA,eAAe,EAAEJ,KAAK,CAACN,MAAxB;AAAgCe,gBAAAA,IAAI,EAAC,CAArC;AAAwCD,gBAAAA,YAAY,EAAC,KAArD;AAA4DE,gBAAAA,MAAM,EAAC;AAAnE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAAF,GAAsGC;AAD9G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;;AACDf,MAAAA,WAAW,CAACK,IAAZ,eACA;AAAK,QAAA,KAAK,EAAE;AAACI,UAAAA,OAAO,EAAC,MAAT;AAAiBO,UAAAA,aAAa,EAAC;AAA/B,SAAZ;AAAA,kBAAoDd;AAApD;AAAA;AAAA;AAAA;AAAA,cADA;AAGD;;AAED,wBACE;AAAK,MAAA,KAAK,EAAE;AAACM,QAAAA,eAAe,EAAE,OAAlB;AAA2BC,QAAAA,OAAO,EAAC,MAAnC;AAA2CO,QAAAA,aAAa,EAAC;AAAzD,OAAZ;AAAA,gBACGhB;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAGDiB,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAED,KAAK,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,MAAM,CAACC,SAAzB,EAAoCL,KAApC,CAAH,GAA8CI,MAAM,CAACC,SAAtE;AAAA,6BACE;AAAA,kBACG,KAAKxB,WAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApE6C;AAuEhD,MAAMuB,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAC;AACRhB,IAAAA,MAAM,EAAC,MADC;AAERG,IAAAA,OAAO,EAAC,CAFA;AAGRD,IAAAA,OAAO,EAAC,MAHA;AAIRe,IAAAA,cAAc,EAAC,QAJP;AAKRC,IAAAA,UAAU,EAAC;AALH;AADG,CAAf","sourcesContent":["import './App.css'\nimport React from 'react';\n\nexport default class App extends React.Component{\n  state = {\n    rows:6,\n    columns:7,\n    moves:[\n      // {x:0, y:0, player:'red'}\n    ],\n    playerTurn:'red',\n  };\n\n  resetBoard = ()=>{\n    this.setState({moves:[]});\n\n  }\n\n  getPiece = (x,y)=>{\n    const list = this.state.moves.filter((item)=>{\n      return (item.x===x && item.y===y);\n    });\n    return list[0];\n  }\n\n  addMove = (x,y)=>{\n    const{playerTurn}= this.state;\n    const nextPlayerTurn = playerTurn === 'red' ? 'blue' : 'red';\n    this.setState({moves:this.state.moves.concat({x, y, player:playerTurn}), playerTurn:nextPlayerTurn })\n  }\n\n\n  renderBoard(){\n    const {rows, columns}= this.state;\n    const rowsDisplay = [];\n\n    for(let row=0; row<this.state.rows; row+=1){\n      const columnDisplay = [];\n      for(let column=0; column<this.state.columns; column+=1){\n        const piece = this.getPiece(column,row);\n        columnDisplay.push(\n          <div onClick={()=>{this.addMove(column, row)}} style={{width:'8vw', height:'8vw', backgroundColor:'yellow', display:'flex', padding: 5, cursor:'pointer'}}>\n            <div style={{borderRadius:'50%', backgroundColor:'white', flex:1, display:'flex'}}>\n              {piece? <div style={{backgroundColor: piece.player, flex:1, borderRadius:'50%', border:'1px solid #333'}}/>:undefined}\n            </div>\n          </div>\n        );\n      }\n      rowsDisplay.push(\n      <div style={{display:'flex', flexDirection:'row'}}>{columnDisplay}</div>\n      );\n    }\n\n    return(\n      <div style={{backgroundColor: 'white', display:'flex', flexDirection:'column'}}>\n        {rowsDisplay}\n      </div>\n    );\n  }\n\n\n  render(){\n    const {style} = this.props;\n\n    return (\n      <div style={style ? Object.assign({}, styles.container, style):styles.container}>\n        <div>\n          {this.renderBoard()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container:{\n    height:'100%',\n    padding:5,\n    display:'flex',\n    justifyContent:'center',\n    alignItems:'center'\n  }\n}"]},"metadata":{},"sourceType":"module"}